#Wellbore Diagram

library(shinydashboard)
library(shiny)
library(dplyr)
library(ggplot2)
library(stringr)
library(ggrepel)

sidebar <- dashboardSidebar(
  conditionalPanel(condition="input.tabselected==1",
                   textInput("API","API",value = "API"),
                   textInput("Well","Well",value = "Well Name"),
                   numericInput("Ref_Elev","Reference Elevation (ft)", value = 895),
                   numericInput("TD","Total Depth (ft)",value = 2700),
                   numericInput("RAT","Rat Hole Diameter (in)",value = ""),
                   dateInput("Date", "Date", value = Sys.Date(),startview = "decade"),
                   h4("Created by Drew Kreman 4/20/2022")),
  
  conditionalPanel(condition="input.tabselected==2",
                   numericInput("COND_HOLE", "Conductor Hole Diameter (in)", value = ""),
                   numericInput("COND_DIA", "Conductor Casing Diameter (in)",value = ""),
                   numericInput("COND_Casing", "Conductor Casing Depth (ft)", value = ""),
                   numericInput("COND_TOC","Conductor Top of Cement (ft)", value = "")),
  
  conditionalPanel(condition="input.tabselected==3",
                   numericInput("SURF_HOLE","Surface Hole Diameter (in)", value = 10),
                   numericInput("SURF_DIA","Surface Casing Diameter (in)",value = 8),
                   numericInput("SURF_Casing","Surface Casing Depth (ft)",value = 500),
                   numericInput("SURF_TOC","Surface Top of Cement (ft)", value = "")),
  
  conditionalPanel(condition="input.tabselected==4",
                   numericInput("INT_HOLE","Intermediate Hole Diameter (in)", value = ""),
                   numericInput("INT_DIA","Intermediate  Casing Diameter (in)",value = ""),
                   numericInput("INT_Top", "Intermediate Casing Top (ft)",value = ""),
                   numericInput("INT_Casing","Intermediate  Casing Depth (ft)",value = ""),
                   numericInput("INT_TOC","Intermediate  Top of Cement (ft)", value = "")),
  
  conditionalPanel(condition="input.tabselected==5",
                   numericInput("PROD_HOLE","Production Hole Diameter (in)",value = 6),
                   numericInput("PROD_DIA","Production Casing Diameter (in)",value = 4),
                   numericInput("PROD_Top", "Production Casing Top (ft)",value = 0),
                   numericInput("PROD_Casing","Production Casing Depth",value = 2670),
                   numericInput("PROD_TOC","Production Top of Cement (ft)",value = "")),
  
  conditionalPanel(condition="input.tabselected==6",
                   textInput("Packer_Type","Packer Type","Packer"),
                   numericInput("Packer","Packer Depth (ft)",value = ""),
                   textInput("Packer_Type2","Packer 2 Type","Packer"),
                   numericInput("Packer2","Packer 2 Depth (ft)",value = ""),
                   textInput("Packer_Type3","Packer 3 Type","Packer"),
                   numericInput("Packer3","Packer 3 Depth (ft)",value = ""),
                   numericInput("PLUG_TOP","Plug Top (ft)", value = ""),
                   numericInput("PLUG_BOT", "Plug Bottom (ft)",value = ""),
                   numericInput("PLUG_TOP2","Plug 2 Top (ft)", value = ""),
                   numericInput("PLUG_BOT2", "Plug 2 Bottom (ft)",value = "")),
  
  conditionalPanel(condition="input.tabselected==7",
                   textInput("Squeeze_Type","Squeeze Type","Collar"),
                   numericInput("SQZ_TOP","Cement Squeeze Top (ft)",value = ""),
                   numericInput("SQZ_BOT","Cement Squeeze Bottom (ft)",value = ""),
                   textInput("Squeeze_Type2","Squeeze 2 Type","Collar"),
                   numericInput("SQZ_TOP2","Cement Squeeze 2 Top (ft)",value = ""),
                   numericInput("SQZ_BOT2","Cement Squeeze 2 Bottom (ft)",value = "")),
  
  conditionalPanel(condition="input.tabselected==8",
                   numericInput("PERF1_Top","Top Perforation 1",value = 2630),
                   numericInput("PERF1_Bot","Bottom Perforation 1",value = 2642),
                   numericInput("PERF2_Top","Top Perforation 2",value = ""),
                   numericInput("PERF2_Bot","Bottom Perforation 2",value = ""),
                   numericInput("PERF3_Top","Top Perforation 3",value = ""),
                   numericInput("PERF3_Bot","Bottom Perforation 3",value = ""),
                   numericInput("PERF4_Top","Top Perforation 4",value = ""),
                   numericInput("PERF4_Bot","Bottom Perforation 4",value = "")),
  
  conditionalPanel(condition="input.tabselected==9",
                   numericInput("BTW","Base of Treatable Water (ft)", value = ""),
                   textInput("FM_1","Formation 1","FM 1"),
                   numericInput("Formation_1","Formation 1 Depth (ft)",value = ""),
                   textInput("FM_2","Formation 2","FM 2"),
                   numericInput("Formation_2","Formation 2 Depth (ft)",value = ""),
                   textInput("FM_3","Formation 3","FM 3"),
                   numericInput("Formation_3","Formation 3 Depth (ft)",value = "")),
  
  conditionalPanel(condition = "input.tabselected==10",
                   numericInput("Depth","Set Depth (ft)",min = 1,max = 25000,value = 5000),
                   numericInput("Sax","Sacks of Cement (sx)",min = 1, max = 1000,value=200),
                   sliderInput("Yield","Cement Yield Factor (ft3/sx)",min = 0, max = 2, step = 0.01,value=c(1.12,1.2)),
                   sliderInput("Washout","Washout Factor",min = 0, max =2, step = 0.1, value = c(1.25,1.5)),
                   h4("Determine casing size to find appropriate table in the Halliburton Red Book PDF below, then enter ranges for the lower and upper bounds for Cu. Ft. Per Lin. Ft."),
                   numericInput("Redbook_Lwr","Red Book Lower Bound", min = 0, max = 3.999, value = 1),
                   numericInput("Redbook_Upp","Red Book Upper Bound", min = 0.0001, max = 4, value = 3))
)




# Header ----
header <- dashboardHeader(title="Wellbore Diagram")

# Body ----
body <- dashboardBody(
  mainPanel(
    tabsetPanel(
      tabPanel("Diagram", value=1,plotOutput("plot1")),
      tabPanel("Conductor", value=2,),
      tabPanel("Surface", value=3,),
      tabPanel("Intermediate",value = 4,),
      tabPanel("Production",value = 5,),
      tabPanel("Plugs/Packer", value = 6,),
      tabPanel("Squeeze", value = 7,),
      tabPanel("Perforations",value = 8,),
      tabPanel("Geology",value = 9,),
      tabPanel("TOC Calculator",value = 10, plotOutput("box"),
               "Top of Cement Statistics",
              verbatimTextOutput("stats"),
              tags$br(),
              plotOutput("fourpanel"),
              tags$br(),tags$iframe(style="height:500px;width:100%",src="halliburton-cementing-tables.pdf")),
      
      tabPanel("About the Tool",HTML('<h1><span style="text-decoration: underline;">About the Tool</span></h1><p>Complementary product developed to promote education and best practices of well construction in industry. The goal is to continuously improve this tool for use by industry and regulatory agencies.</p>
<p>This tool simply constructs a wellbore diagram when you provide:</p>
<p style="padding-left: 30px;">(i) Reference elevations (casing depths, ground elevation, total depth, top of cement, etc.)</p>
<p style="padding-left: 30px;">(ii) Diameters of casing and drill hole</p>
<p style="padding-left: 30px;">(iii) Well completion information (perforations, packer type, etc.)</p>')),
      tabPanel("Terms of Use",HTML('<h1><span style="text-decoration: underline;">Terms of Use</span></h1>
<p>1. The results of this tool can be used for education and other purposes as long as the source is properly cited as:&nbsp;https://dkreman.shinyapps.io/app_WBD/</p>
<p>2. The creator of the tool does not take responsibility for the accuracy of the outputs of these tools or any consequences resulted by using the results.</p>
<p>If you have any questions regarding these terms or the tool itself, please contact Drew Kreman at&nbsp;<a class="pv-contact-info__contact-link link-without-visited-state t-14" href="https://www.linkedin.com/in/drew-kreman">linkedin.com/in/drew-kreman</a></p>
<p>&nbsp;</p>')),
      
      id = "tabselected"
    )
  )
)


ui <- dashboardPage(header, sidebar, body)

server<-function(input,output){
  
  filtered_df<-reactive({
    
    Ref_Elev<-input$Ref_Elev
    
    Date <- input$Date
    
    TD<-input$TD
    
    COND_Casing<-input$COND_Casing
    
    COND_DIA<-input$COND_DIA
    
    SURF_Casing<-input$SURF_Casing
    
    SURF_DIA<-input$SURF_DIA
    
    PROD_DIA<-input$PROD_DIA
    
    PROD_Casing<-input$PROD_Casing
    
    PROD_HOLE <-input$PROD_HOLE
    
    PROD_Top <- input$PROD_Top
    
    BTW<-input$BTW
    
    RAT <- input$RAT
    
    INT_HOLE <- input$INT_HOLE
    
    INT_DIA <- input$INT_DIA
    
    INT_Top <- input$INT_Top
    
    INT_Casing <- input$INT_Casing
    
    INT_TOC <- input$INT_TOC
    
    PLUG_TOP <- input$PLUG_TOP
    
    PLUG_BOT <- input$PLUG_BOT
    
    
    
    
    df<-data.frame(Ref_Elev,TD,SURF_Casing,SURF_DIA,PROD_DIA,PROD_Casing,BTW,COND_Casing,COND_DIA,PROD_HOLE, RAT, INT_HOLE, INT_DIA, INT_Casing, INT_TOC, PLUG_TOP, PLUG_BOT, PROD_Top)
    
  })
  
  # Main
  
  output$plot1<-renderPlot({
    ggplot()+
      
      # Label x and y axis
      
      
      labs(x="Diameter in inches from center", y="Depth relative to sea level (ft)")+
      
      #Define limits of plot
      scale_x_continuous(name = "Diameter in inches from center", breaks = waiver(),expand = expansion(mult = c(.2, .2)))+
      scale_y_continuous(name = "Depth relative to sea level (ft)", breaks = waiver())+
      
      
      #Well Header
      geom_text(aes(x=0,label=input$Date, y=(input$Ref_Elev-input$TD)-200),color="black",angle=0)+
      
      geom_text(aes(x=0, label=input$Well,y=input$Ref_Elev+250), color="black",angle=0)+
      
      geom_text(aes(x=0,label=input$API, y=input$Ref_Elev+500),color="black",angle=0)+
      
      geom_text_repel(data=filtered_df(), aes(x=max(),y=input$Ref_Elev,label=paste("Ref Elev","-",input$Ref_Elev,"(0 MD)",sep = " "),min.segment.length = 0))+
      
      #Drill Hole
      geom_segment(data = filtered_df(), aes(x=-input$COND_HOLE/2,y=Ref_Elev,xend=-input$COND_HOLE/2,yend=Ref_Elev - input$COND_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=input$COND_HOLE/2,y=Ref_Elev,xend=input$COND_HOLE/2,yend=Ref_Elev - input$COND_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=-input$SURF_HOLE/2,y=Ref_Elev,xend=-input$SURF_HOLE/2,yend=Ref_Elev - input$SURF_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=input$SURF_HOLE/2,y=Ref_Elev,xend=input$SURF_HOLE/2,yend=Ref_Elev - input$SURF_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=-input$INT_HOLE/2,y=Ref_Elev - input$SURF_Casing,xend=-input$INT_HOLE/2,yend=Ref_Elev - input$INT_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=input$INT_HOLE/2,y=Ref_Elev - input$SURF_Casing,xend=input$INT_HOLE/2,yend=Ref_Elev - input$INT_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=-input$PROD_HOLE/2,y=Ref_Elev - input$SURF_Casing,xend=-input$PROD_HOLE/2,yend=Ref_Elev - input$PROD_Casing),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=input$PROD_HOLE/2,y=Ref_Elev - input$SURF_Casing,xend=input$PROD_HOLE/2,yend=Ref_Elev - input$PROD_Casing),size=1,color="black",linetype="dotted")+
      
      #Base of Treatable Water
      geom_hline(yintercept = input$Ref_Elev-input$BTW,linetype="dashed",color="blue", size=1)+
      
      geom_text_repel(data=filtered_df(), aes(x=max(),label=paste("BTW","-",input$BTW,"MD",sep=" "), y=input$Ref_Elev-input$BTW +60),color="black",angle=0)+
      
      #Formation tops
      geom_hline(yintercept = input$Ref_Elev-input$Formation_1,linetype="dashed",color="orange", size=1)+
      
      geom_text_repel(data=filtered_df(), aes(x=max(),label=paste(input$FM_1,"-",input$Formation_1,"MD", sep = " "), y=input$Ref_Elev-input$Formation_1 +60),color="black",angle=0)+
      
      geom_hline(yintercept = input$Ref_Elev-input$Formation_2,linetype="dashed",color="purple", size=1)+
      
      geom_text_repel(data=filtered_df(), aes(x=max(),label=paste(input$FM_2,"-",input$Formation_2,"MD", sep = " "), y=input$Ref_Elev-input$Formation_2 +60),color="black",angle=0)+
      geom_hline(yintercept = input$Ref_Elev-input$Formation_3,linetype="dashed",color="green", size=1)+
      
      geom_text_repel(data=filtered_df(), aes(x=max(),label=paste(input$FM_3,"-",input$Formation_3,"MD", sep = " "), y=input$Ref_Elev-input$Formation_3+60),color="black",angle=0)+
      
      geom_text(aes(x=-18,label="", y=input$Ref_Elev-input$Formation_3+60),color="black",angle=0)+ # Keep code so that app works correctly (bug?)
      
      
      #Production Cement Top
      annotate(geom = "rect",xmin = -input$PROD_HOLE/2,xmax = -input$PROD_DIA/2,ymin = input$Ref_Elev-input$PROD_TOC,ymax = input$Ref_Elev-input$PROD_Casing,fill="grey80",colour="black")+
      
      annotate(geom = "rect",xmin = input$PROD_HOLE/2,xmax = input$PROD_DIA/2,ymin = input$Ref_Elev-input$PROD_TOC,ymax = input$Ref_Elev-input$PROD_Casing,fill="grey80",colour="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$PROD_TOC,"MD","-","Prod_TOC",sep = " "),y=input$Ref_Elev-input$PROD_TOC),color="black",angle=0)+
      
      #Production Casing
      
      geom_segment(data = filtered_df(),aes(x=-input$PROD_DIA/2,y=Ref_Elev-input$PROD_Top,xend=-PROD_DIA/2,yend=Ref_Elev-input$PROD_Casing),size=1.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=input$PROD_DIA/2,y=Ref_Elev-input$PROD_Top,xend=PROD_DIA/2,yend=Ref_Elev-input$PROD_Casing),size=1.5,color="black")+
      
      geom_point(data = filtered_df(), aes(x = -input$PROD_DIA/2, y = Ref_Elev-input$PROD_Casing), shape = 17, color = "black", size = 4)+
      
      geom_point(data = filtered_df(), aes(x = input$PROD_DIA/2, y = Ref_Elev-input$PROD_Casing), shape = 17, color = "black", size = 4)+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),label=paste(input$PROD_Top,"MD","-","PROD Liner", sep=" "), y=(input$Ref_Elev-input$PROD_Top)+50),color="black",angle=0)+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),label=paste(input$PROD_Casing,"MD","-",input$PROD_DIA,"in","Casing", sep=" "), y=input$Ref_Elev-input$PROD_Casing),color="black",angle=0)+
      
      #Cement Squeeze
      annotate(geom="rect",xmin = -input$PROD_HOLE/2,xmax = -input$PROD_DIA/2,ymin = input$Ref_Elev-input$SQZ_TOP,ymax = input$Ref_Elev-input$SQZ_BOT,fill="grey80",color="black")+
      
      annotate(geom="rect",xmin = input$PROD_HOLE/2,xmax = input$PROD_DIA/2,ymin = input$Ref_Elev-input$SQZ_TOP,ymax = input$Ref_Elev-input$SQZ_BOT,fill="grey80",color="black")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=input$Ref_Elev-input$SQZ_BOT),label=paste("Sqz Int","-",input$SQZ_TOP, "-",input$SQZ_BOT,"MD",sep = " "),min.segment.length = 0)+
      
    
    #Cement Squeeze 2
    annotate(geom="rect",xmin = -input$PROD_HOLE/2,xmax = -input$PROD_DIA/2,ymin = input$Ref_Elev-input$SQZ_TOP2,ymax = input$Ref_Elev-input$SQZ_BOT2,fill="grey80",color="black")+
      
      annotate(geom="rect",xmin = input$PROD_HOLE/2,xmax = input$PROD_DIA/2,ymin = input$Ref_Elev-input$SQZ_TOP2,ymax = input$Ref_Elev-input$SQZ_BOT2,fill="grey80",color="black")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=input$Ref_Elev-input$SQZ_BOT2),label=paste("Sqz Int","-",input$SQZ_TOP2, "-",input$SQZ_BOT2,"MD",sep = " "),min.segment.length = 0)+
      
      # Cement Plug
      annotate(geom="rect",xmin = -input$PROD_DIA/2,xmax = input$PROD_DIA/2,ymin = input$Ref_Elev-input$PLUG_TOP,ymax = input$Ref_Elev-input$PLUG_BOT,fill="grey30",color="black")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=Ref_Elev-input$PLUG_TOP,label=paste(input$PLUG_TOP, "-",input$PLUG_BOT,"MD","-","Plug",sep = " "),min.segment.length = 0))+
      
      # Cement Plug 2
      annotate(geom="rect",xmin = -input$PROD_DIA/2,xmax = input$PROD_DIA/2,ymin = input$Ref_Elev-input$PLUG_TOP2,ymax = input$Ref_Elev-input$PLUG_BOT2,fill="grey30",color="black")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=Ref_Elev-input$PLUG_TOP2,label=paste(input$PLUG_TOP2, "-",input$PLUG_BOT2,"MD","-","Plug",sep = " "),min.segment.length = 0))+
      
      #Packer
      geom_segment(data = filtered_df(),aes(x=-input$PROD_DIA/2,y=Ref_Elev-input$Packer,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=input$PROD_DIA/2,y=Ref_Elev-input$Packer,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=(-input$PROD_DIA/2)+1.5,y=Ref_Elev,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer),size=0.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=(input$PROD_DIA/2)-1.5,y=Ref_Elev,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer),size=0.5,color="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$Packer,"MD","-",input$Packer_Type,sep = " "), y=input$Ref_Elev-input$Packer+50),color="black",angle=0)+
      
      #Packer 2
      geom_segment(data = filtered_df(),aes(x=-input$PROD_DIA/2,y=Ref_Elev-input$Packer2,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer2),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=input$PROD_DIA/2,y=Ref_Elev-input$Packer2,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer2),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=(-input$PROD_DIA/2)+1.5,y=Ref_Elev,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer2),size=0.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=(input$PROD_DIA/2)-1.5,y=Ref_Elev,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer2),size=0.5,color="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$Packer2,"MD","-",input$Packer_Type2,sep = " "), y=input$Ref_Elev-input$Packer2+50),color="black",angle=0)+
      
      #Packer 3
      geom_segment(data = filtered_df(),aes(x=-input$PROD_DIA/2,y=Ref_Elev-input$Packer3,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer3),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=input$PROD_DIA/2,y=Ref_Elev-input$Packer3,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer3),size=3,color="dark red")+
      
      geom_segment(data = filtered_df(),aes(x=(-input$PROD_DIA/2)+1.5,y=Ref_Elev,xend=(-input$PROD_DIA/2)+1.5,yend=Ref_Elev-input$Packer3),size=0.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=(input$PROD_DIA/2)-1.5,y=Ref_Elev,xend=(input$PROD_DIA/2)-1.5,yend=Ref_Elev-input$Packer3),size=0.5,color="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$Packer3,"MD","-",input$Packer_Type3,sep = " "), y=input$Ref_Elev-input$Packer3+50),color="black",angle=0)+
      
      #Intermediate Cement Top
      
      annotate(geom = "rect",xmin = -input$INT_HOLE/2,xmax = -input$INT_DIA/2,ymin = input$Ref_Elev-input$INT_TOC,ymax = input$Ref_Elev-input$INT_Casing,fill="grey80",colour="black")+
      
      annotate(geom = "rect",xmin = input$INT_HOLE/2,xmax = input$INT_DIA/2,ymin = input$Ref_Elev-input$INT_TOC,ymax = input$Ref_Elev-input$INT_Casing,fill="grey80",colour="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$INT_TOC,"MD", "-","Int_TOC",sep = " "), y=(input$Ref_Elev-input$INT_TOC)+100),color="black",angle=0)+
      
      #Intermediate Casing
      
      geom_segment(data = filtered_df(),aes(x=-input$INT_DIA/2,y=Ref_Elev-input$INT_Top,xend=-INT_DIA/2,yend=Ref_Elev-input$INT_Casing),size=1.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=input$INT_DIA/2,y=Ref_Elev-input$INT_Top,xend=INT_DIA/2,yend=Ref_Elev-input$INT_Casing),size=1.5,color="black")+
      
      geom_point(data = filtered_df(), aes(x = -input$INT_DIA/2, y = Ref_Elev-input$INT_Casing), shape = 17, color = "black", size = 4)+
      
      geom_point(data = filtered_df(), aes(x = input$INT_DIA/2, y = Ref_Elev-input$INT_Casing), shape = 17, color = "black", size = 4)+
      
      geom_text(aes(x=18,label=paste(input$INT_Top,"MD","-","INT Liner", sep=" "), y=(input$Ref_Elev-input$INT_Top)+150),color="black",angle=0)+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$INT_Casing,"MD","-",input$INT_DIA,"in","Casing", sep=" "), y=input$Ref_Elev-input$INT_Casing),color="black",angle=0)+ 
      
      #Surface Cement Top
      
      annotate(geom = "rect",xmin = -input$SURF_HOLE/2,xmax = -input$SURF_DIA/2,ymin = input$Ref_Elev-input$SURF_TOC,ymax = input$Ref_Elev-input$SURF_Casing,fill="grey80",colour="black")+
      
      annotate(geom = "rect",xmin = input$SURF_HOLE/2,xmax = input$SURF_DIA/2,ymin = input$Ref_Elev-input$SURF_TOC,ymax = input$Ref_Elev-input$SURF_Casing,fill="grey80",colour="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$SURF_TOC,"MD", "-","Surf_TOC",sep = " "), y=(input$Ref_Elev-input$SURF_TOC)+200),color="black",angle=0)+
      
      #Surface Casing
      
      geom_segment(data = filtered_df(),aes(x=-input$SURF_DIA/2,y=Ref_Elev,xend=-SURF_DIA/2,yend=Ref_Elev-input$SURF_Casing),size=1.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=input$SURF_DIA/2,y=Ref_Elev,xend=SURF_DIA/2,yend=Ref_Elev-input$SURF_Casing),size=1.5,color="black")+
      
      geom_point(data = filtered_df(), aes(x = -input$SURF_DIA/2, y = Ref_Elev-input$SURF_Casing), shape = 17, color = "black", size = 4)+
      
      geom_point(data = filtered_df(), aes(x = input$SURF_DIA/2, y = Ref_Elev-input$SURF_Casing), shape = 17, color = "black", size = 4)+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$SURF_Casing,"MD","-",input$SURF_DIA,"in","Casing", sep=" "), y=input$Ref_Elev-input$SURF_Casing),color="black",angle=0)+ 
      
      
      # Conductor Cement 
      
      annotate(geom = "rect",xmin = -input$COND_HOLE/2,xmax = -input$COND_DIA/2,ymin = input$Ref_Elev-input$COND_TOC,ymax = input$Ref_Elev-input$COND_Casing,fill="grey80",colour="black")+
      
      annotate(geom = "rect",xmin = input$COND_HOLE/2,xmax = input$COND_DIA/2,ymin = input$Ref_Elev-input$COND_TOC,ymax = input$Ref_Elev-input$COND_Casing,fill="grey80",colour="black")+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$COND_TOC,"MD","-","Cond_TOC"," "), y=(input$Ref_Elev-input$COND_TOC)+250),color="black",angle=0)+
      
      #Conductor Casing
      
      geom_segment(data = filtered_df(),aes(x=-input$COND_DIA/2,y=Ref_Elev,xend=-COND_DIA/2,yend=Ref_Elev-input$COND_Casing),size=1.5,color="black")+
      
      geom_segment(data = filtered_df(),aes(x=input$COND_DIA/2,y=Ref_Elev,xend=COND_DIA/2,yend=Ref_Elev-input$COND_Casing),size=1.5,color="black")+
      
      geom_point(data = filtered_df(), aes(x = -input$COND_DIA/2, y = Ref_Elev-input$COND_Casing), shape = 17, color = "black", size = 4)+
      
      geom_point(data = filtered_df(), aes(x = input$COND_DIA/2, y = Ref_Elev-input$COND_Casing), shape = 17, color = "black", size = 4)+
      
      geom_text_repel(data=filtered_df(),aes(x=min(),label=paste(input$COND_Casing,"MD","-",input$COND_DIA,"in","Casing",sep = " "), y=input$Ref_Elev-input$COND_Casing),color="black",angle=0)+
      
      #Injection Top and Bottom
      
      geom_segment(data = filtered_df(),aes(x=-PROD_DIA/2,y=Ref_Elev-input$PERF1_Top,xend=-PROD_DIA/2,yend=Ref_Elev-input$PERF1_Bot),size=3,color="red")+
      
      geom_segment(data = filtered_df(),aes(x=PROD_DIA/2,y=Ref_Elev-input$PERF1_Top,xend=PROD_DIA/2,yend=Ref_Elev-input$PERF1_Bot),size=3,color="red")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=(((Ref_Elev-input$PERF1_Bot)+(Ref_Elev-input$PERF1_Top))/2),label=paste("Inj Top-Bot","-",input$PERF1_Top, "-",input$PERF1_Bot,"MD",sep = " "),min.segment.length = 0))+
      
      geom_segment(data = filtered_df(),aes(x=-PROD_DIA/2,y=Ref_Elev-input$PERF2_Top,xend=-PROD_DIA/2,yend=Ref_Elev-input$PERF2_Bot),size=3,color="red")+
      
      geom_segment(data = filtered_df(),aes(x=PROD_DIA/2,y=Ref_Elev-input$PERF2_Top,xend=PROD_DIA/2,yend=Ref_Elev-input$PERF2_Bot),size=3,color="red")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=(((Ref_Elev-input$PERF2_Bot)+(Ref_Elev-input$PERF2_Top))/2),label=paste("Inj Top-Bot","-",input$PERF2_Top, "-",input$PERF2_Bot,"MD",sep = " "),min.segment.length = 0))+
      
      geom_segment(data = filtered_df(),aes(x=-PROD_DIA/2,y=Ref_Elev-input$PERF3_Top,xend=-PROD_DIA/2,yend=Ref_Elev-input$PERF3_Bot),size=3,color="red")+
      
      geom_segment(data = filtered_df(),aes(x=PROD_DIA/2,y=Ref_Elev-input$PERF3_Top,xend=PROD_DIA/2,yend=Ref_Elev-input$PERF3_Bot),size=3,color="red")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=(((Ref_Elev-input$PERF3_Bot)+(Ref_Elev-input$PERF3_Top))/2),label=paste("Inj Top-Bot","-",input$PERF3_Top, "-",input$PERF3_Bot,"MD",sep = " "),min.segment.length = 0))+
      
      geom_segment(data = filtered_df(),aes(x=-PROD_DIA/2,y=Ref_Elev-input$PERF4_Top,xend=-PROD_DIA/2,yend=Ref_Elev-input$PERF4_Bot),size=3,color="red")+
      
      geom_segment(data = filtered_df(),aes(x=PROD_DIA/2,y=Ref_Elev-input$PERF4_Top,xend=PROD_DIA/2,yend=Ref_Elev-input$PERF4_Bot),size=3,color="red")+
      
      geom_text_repel(data=filtered_df(), aes(x=min(),y=(((Ref_Elev-input$PERF4_Bot)+(Ref_Elev-input$PERF4_Top))/2),label=paste("Inj Top-Bot","-",input$PERF4_Top, "-",input$PERF4_Bot,"MD",sep = " "),min.segment.length = 0))+
      
      #Rat hole
      
      geom_segment(data = filtered_df(), aes(x=-input$RAT/2,y=Ref_Elev - input$PROD_Casing,xend=-input$RAT/2,yend=Ref_Elev - input$TD),size=1,color="black",linetype="dotted")+
      
      geom_segment(data = filtered_df(), aes(x=input$RAT/2,y=Ref_Elev - input$PROD_Casing,xend=input$RAT/2,yend=Ref_Elev - input$TD),size=1,color="black",linetype="dotted")+
      
      geom_text(aes(x=0,label=paste(input$TD,"TD",sep = " "), y=input$Ref_Elev-input$TD-50),color="black",angle=0,guide = guide_axis(check.overlap = TRUE))+
      theme_minimal()
    
  },width=500,height = 1000)
  
  
  # Top of Cement Calculator
  
  Yield <- reactive({runif(5000,input$Yield[1],input$Yield[2])})
  Washout <- reactive({runif(5000,input$Washout[1],input$Washout[2])})
  Redbook <- reactive({runif(5000,input$Redbook_Lwr,input$Redbook_Upp)})
  
  TOC<-reactive({input$Depth-((input$Sax*Yield()/(Redbook()*Washout())))})
  
  output$box<-renderPlot({
    par(mfrow=c(1,2))
    hist(TOC(), breaks = 20, main = "Histogram of TOC", xlab = "TOC (ft)")
    boxplot(TOC(), ylab = "TOC (ft)", main = "Boxplot of TOC", ylim = c(max(TOC()),min(TOC())))
  })
  
  output$stats <- renderPrint({summary(TOC())})
  
  output$fourpanel <- renderPlot({
    par(mfrow = c(1,3))
    hist(Yield(), main = "Histogram of Cement Yield", xlab = "Yield (ft3)", breaks = 20, col = "blue")
    hist(Washout(), main = "Histogram of Washout Factor", xlab = "Washout Factor", breaks = 20, col = "blue")
    hist(Redbook(), main = "Histogram of Redbook Factor", xlab = "Cu. Ft. Per Lin. Ft.", breaks = 20, col = "blue")
  })
  
  
}

shinyApp(ui=ui,server=server)

